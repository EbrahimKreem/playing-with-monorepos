{"version":3,"sources":["components/ErrorMessage.js","components/EmailField.js","components/PasswordField.js","mutations/index.js","queries/index.js","components/Form.js","pages/Login.js","pages/Register.js","pages/Secret.js","components/Navbar.js","components/Portal.js","pages/ForgotPassword.js","pages/NotFound.js","pages/ChangePassword.js","App.js","index.js"],"names":["ErrorMessageHandler","_ref","field","react_default","a","createElement","formik_esm","name","msg","Label","basic","color","pointing","size","Email","Fragment","ErrorMessage","Form","Field","type","placeholder","Password","_useState","useState","_useState2","Object","slicedToArray","revealPass","setRevealPass","handleRevealPassword","e","_ref2","Input","assign","icon","Icon","circular","link","onClick","FORGOT_PASSWORD","gql","_templateObject","LOGIN","_templateObject2","REGISTER","_templateObject3","CHANGE_PASSWORD","_templateObject4","LOGIN_OR_REGISTER_WITH_GOOGLE","_templateObject5","LOGIN_OR_REGISTER_WITH_FACEBOOK","_templateObject6","CURRENT_USER","queries_templateObject","Frm","showUserName","validationSchema","initialValues","onSubmit","_ref$showForgotPasswo","showForgotPasswordLink","_ref$path","path","history","loginOrRegisterWithGoogle","useMutation","loginOrRegisterWithFacebook","responseGoogle","_ref3","asyncToGenerator","regenerator_default","mark","_callee","profileObj","googleId","_ref4","data","wrap","_context","prev","next","variables","update","cache","_ref5","writeQuery","query","me","authGoogle","user","sent","localStorage","setItem","token","push","t0","console","log","stop","_x","apply","this","arguments","facebookResponse","_ref7","_callee2","_ref6","userID","_ref8","_context2","facebookId","_ref9","authFacebook","_x2","props","handleSubmit","loading","isSubmitting","EmailField","PasswordField","react_router_dom","to","style","float","paddingTop","Button","Divider","horizontal","google_login","clientId","onSuccess","onFailure","render","renderProps","disabled","className","facebook_login_render_props_default","appId","autoLoad","fields","callback","LoginSchema","Yup","shape","email","required","password","min","max","Login","loginUser","useEffect","getItem","values","actions","isEmailError","register","login","message","split","toLowerCase","includes","setFieldError","setSubmitting","Segment","stacked","Header","components_Form","RegisterSchema","Register","addNewUser","Secret","_useQuery","useQuery","Loader","active","inline","marginTop","maxWidth","margin","textAlign","Navbar","Menu","secondary","position","inverted","removeItem","Item","as","Link","PortalCMP","content","show","close","Portal","onClose","open","raised","left","top","marginRight","zIndex","ForgotPasswordSchema","ForgotPassword","forgotPassword","showPortal","setShowPortal","components_Portal","padding","NotFound","ResetPasswordSchema","confirmPassword","ChangePassword","changePassword","abrupt","match","params","App","react_router","component","exact","from","httpLink","createHttpLink","uri","authLink","setContext","_","headers","objectSpread","authorization","concat","client","ApolloClient","InMemoryCache","ReactDOM","ApolloContext","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.959986de.chunk.js","sourcesContent":["import React from \"react\";\nimport { ErrorMessage } from \"formik\";\nimport { Label } from \"semantic-ui-react\";\n\nconst ErrorMessageHandler = ({ field }) => {\n  return (\n    <ErrorMessage name={field}>\n      {msg => (\n        <Label basic color=\"red\" pointing=\"below\" size=\"small\">\n          {msg}\n        </Label>\n      )}\n    </ErrorMessage>\n  );\n};\n\nexport default ErrorMessageHandler;\n","import React from \"react\";\nimport { Form } from \"semantic-ui-react\";\nimport { Field } from \"formik\";\nimport ErrorMessageHandler from \"./ErrorMessage\";\n\nconst Email = () => {\n  return (\n    <>\n      <ErrorMessageHandler field=\"email\"/>\n      <Form.Field >\n        <Field type=\"email\" name=\"email\" placeholder=\"Email\" />\n      </Form.Field>\n    </>\n  );\n};\n\nexport default Email;\n","import React, { useState } from \"react\";\nimport { Form, Input, Icon } from \"semantic-ui-react\";\nimport { Field } from \"formik\";\nimport ErrorMessageHandler from \"./ErrorMessage\";\n\nconst Password = ({ placeholder, name }) => {\n  const [revealPass, setRevealPass] = useState(false);\n\n  const handleRevealPassword = e => setRevealPass(!revealPass);\n  return (\n    <>\n      <ErrorMessageHandler field={name ? name : \"password\"} />\n      <Form.Field>\n        <Field type=\"password\" name={name ? name : \"password\"}>\n          {({ field }) => {\n            return (\n              <Input\n                {...field}\n                type={revealPass ? \"text\" : \"password\"}\n                icon={\n                  <Icon\n                    name={revealPass ? \"eye\" : \"eye slash\"}\n                    circular\n                    link\n                    onClick={handleRevealPassword}\n                  />\n                }\n                placeholder={placeholder ? placeholder : \"Password\"}\n              />\n            );\n          }}\n        </Field>\n      </Form.Field>\n    </>\n  );\n};\n\nexport default Password;\n","import gql from \"graphql-tag\";\n\nexport const FORGOT_PASSWORD = gql`\n  mutation($email: String!) {\n    forgotPassword(email: $email)\n  }\n`;\n\nexport const LOGIN = gql`\n  mutation($data: LoginInputType!) {\n    login(data: $data) {\n      user {\n        _id\n        name\n      }\n      token\n    }\n  }\n`;\n\nexport const REGISTER = gql`\n  mutation($data: RegisterInputType!) {\n    register(data: $data) {\n      user {\n        name\n        _id\n      }\n      token\n    }\n  }\n`;\n\nexport const CHANGE_PASSWORD = gql`\n  mutation($password: String!, $token: String!) {\n    changePassword(password: $password, token: $token) {\n      user{\n        _id\n        name\n      }\n      token\n    }\n  }\n`;\n\nexport const LOGIN_OR_REGISTER_WITH_GOOGLE = gql`\n  mutation($data: AuthGoogleInput!) {\n    authGoogle(data: $data) {\n      user {\n        _id\n        name\n      }\n      token\n    }\n  }\n`;\n\nexport const LOGIN_OR_REGISTER_WITH_FACEBOOK = gql`\n  mutation($data: AuthFacebookInput!) {\n    authFacebook(data: $data) {\n      token\n      user {\n        _id\n        name\n      }\n    }\n  }\n`;\n","import gql from \"graphql-tag\";\n\nexport const CURRENT_USER = gql`\n  {\n    me {\n      _id\n      name\n    }\n  }\n`;\n","import React from \"react\";\nimport { Form, Button, Divider, Icon } from \"semantic-ui-react\";\nimport { Formik, Field } from \"formik\";\nimport { Link } from \"react-router-dom\";\nimport Email from \"./EmailField\";\nimport Password from \"./PasswordField\";\nimport ErrorMessageHandler from \"./ErrorMessage\";\nimport { GoogleLogin } from \"react-google-login\";\nimport FacebookLogin from \"react-facebook-login/dist/facebook-login-render-props\";\nimport { useMutation } from \"react-apollo-hooks\";\nimport {\n  LOGIN_OR_REGISTER_WITH_GOOGLE,\n  LOGIN_OR_REGISTER_WITH_FACEBOOK\n} from \"../mutations\";\nimport { CURRENT_USER } from \"../queries\";\n\nconst Frm = ({\n  showUserName,\n  validationSchema,\n  initialValues,\n  onSubmit,\n  showForgotPasswordLink = false,\n  path = \"Register\",\n  history\n}) => {\n  const loginOrRegisterWithGoogle = useMutation(LOGIN_OR_REGISTER_WITH_GOOGLE);\n  const loginOrRegisterWithFacebook = useMutation(\n    LOGIN_OR_REGISTER_WITH_FACEBOOK\n  );\n  const responseGoogle = async ({ profileObj, googleId }) => {\n    try {\n      const { data } = await loginOrRegisterWithGoogle({\n        variables: {\n          data: {\n            name: profileObj.name,\n            googleId\n          }\n        },\n        update: (cache, { data }) => {\n          cache.writeQuery({\n            query: CURRENT_USER,\n            data: {\n              me: data.authGoogle.user\n            }\n          });\n        }\n      });\n      localStorage.setItem(\"token\", data.authGoogle.token);\n      history.push(\"/secret\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const facebookResponse = async ({ name, userID }) => {\n    try {\n      const { data } = await loginOrRegisterWithFacebook({\n        variables: {\n          data: {\n            name,\n            facebookId: userID\n          }\n        },\n        update: (cache, { data }) => {\n          cache.writeQuery({\n            query: CURRENT_USER,\n            data: {\n              me: data.authFacebook.user\n            }\n          });\n        }\n      });\n      localStorage.setItem(\"token\", data.authFacebook.token);\n      history.push(\"/secret\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={onSubmit}\n    >\n      {props => {\n        return (\n          <Form onSubmit={props.handleSubmit} loading={props.isSubmitting}>\n            {showUserName ? (\n              <>\n                <ErrorMessageHandler field=\"name\" />\n                <Form.Field>\n                  <Field type=\"text\" name=\"name\" placeholder=\"Username\" />\n                </Form.Field>\n              </>\n            ) : null}\n            <Email />\n            <Password />\n            {showForgotPasswordLink ? (\n              <Link\n                to=\"/forgot-password\"\n                style={{ float: \"right\", paddingTop: 9 }}\n              >\n                Forgot Password?\n              </Link>\n            ) : null}\n            <Button type=\"submit\" basic>\n              Submit\n            </Button>\n            <Divider horizontal>\n              <p>\n                <em>OR</em>\n              </p>\n            </Divider>\n            <GoogleLogin\n              clientId=\"750525016321-hs6um0d2o34tksfeg9da78da501fto25.apps.googleusercontent.com\"\n              onSuccess={responseGoogle}\n              onFailure={responseGoogle}\n              render={renderProps => (\n                <button\n                  onClick={renderProps.onClick}\n                  disabled={renderProps.disabled}\n                  className=\"ui google plus labeled icon button\"\n                >\n                  <Icon name=\"google\" /> {path} With Google\n                </button>\n              )}\n            />\n            <FacebookLogin\n              appId=\"351814088793425\"\n              autoLoad={false}\n              fields=\"name,email,picture\"\n              callback={facebookResponse}\n              render={renderProps => (\n                <button\n                  onClick={renderProps.onClick}\n                  disabled={renderProps.disabled}\n                  className=\"ui facebook right floated labeled icon button\"\n                >\n                  <Icon name=\"facebook f\" /> {path} With Facebook\n                </button>\n              )}\n            />\n          </Form>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default Frm;\n","import React, { useEffect } from \"react\";\nimport Form from \"../components/Form\";\nimport { useMutation } from \"react-apollo-hooks\";\nimport * as Yup from \"yup\";\nimport { Segment, Divider, Header } from \"semantic-ui-react\";\nimport { LOGIN } from \"../mutations/index\";\nimport {CURRENT_USER} from '../queries/index';\n\nconst LoginSchema = Yup.object().shape({\n  email: Yup.string()\n    .email(\"Invalid email\")\n    .required(\"Required\"),\n  password: Yup.string()\n    .min(8, \"Too Short!\")\n    .max(30, \"Too Long!\")\n    .required(\"Required\")\n});\n\nconst Login = props => {\n  const loginUser = useMutation(LOGIN);\n\n  useEffect(() => {\n    if (localStorage.getItem(\"token\")) props.history.push(\"/secret\");\n  }, []);\n\n  const onSubmit = async (values, actions) => {\n    try {\n      const { data } = await loginUser({\n        variables: { data: values },\n        update: (cache, { data }) => {\n          cache.writeQuery({\n            query: CURRENT_USER,\n            data: {\n              me: data.register.user\n            }\n          });\n        }\n      });\n      localStorage.setItem(\"token\", data.login.token);\n      props.history.push(\"/secret\");\n    } catch (error) {\n      const msg = error.message.split(\":\")[1];\n      const isEmailError = msg.toLowerCase().includes(\"email\");\n      actions.setFieldError(isEmailError ? \"email\" : \"password\", msg);\n      actions.setSubmitting(false);\n    }\n  };\n\n  return (\n    <div className=\"frm\">\n      <Segment stacked>\n        <Divider horizontal>\n          <Header>\n            <em>Login</em>\n          </Header>\n        </Divider>\n        <Form\n          showUserName={false}\n          initialValues={{ email: \"\", password: \"\" }}\n          validationSchema={LoginSchema}\n          onSubmit={onSubmit}\n          showForgotPasswordLink={true}\n          {...props}\n          path=\"Login\"\n        />\n      </Segment>\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useEffect } from \"react\";\nimport Form from \"../components/Form\";\nimport { useMutation } from \"react-apollo-hooks\";\nimport * as Yup from \"yup\";\nimport { Segment, Divider, Header } from \"semantic-ui-react\";\nimport { REGISTER } from \"../mutations/index\";\nimport { CURRENT_USER } from \"../queries/index\";\n\nconst RegisterSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(20, \"Too Long!\")\n    .required(\"Required\"),\n  email: Yup.string()\n    .email(\"Invalid email\")\n    .required(\"Required\"),\n  password: Yup.string()\n    .min(8, \"Too Short!\")\n    .max(30, \"Too Long!\")\n    .required(\"Required\")\n});\n\nconst Register = props => {\n  const addNewUser = useMutation(REGISTER);\n\n  useEffect(() => {\n    if (localStorage.getItem(\"token\")) props.history.push(\"/secret\");\n  }, []);\n\n  const onSubmit = async (values, actions) => {\n    try {\n      const { data } = await addNewUser({\n        variables: { data: values },\n        update: (cache, { data }) => {\n          cache.writeQuery({\n            query: CURRENT_USER,\n            data: {\n              me: data.register.user\n            }\n          })\n          \n        }\n      });\n      localStorage.setItem(\"token\", data.register.token);\n      props.history.push(\"/secret\");\n    } catch (error) {\n      actions.setFieldError(\"email\", \"Email is in use please try another one\");\n      actions.setSubmitting(false);\n    }\n  };\n\n  return (\n    <div className=\"frm\">\n      <Segment stacked>\n        <Divider horizontal>\n          <Header>\n            <em>Register</em>\n          </Header>\n        </Divider>\n        <Form\n          showUserName={true}\n          initialValues={{ name: \"\", email: \"\", password: \"\" }}\n          validationSchema={RegisterSchema}\n          onSubmit={onSubmit}\n          {...props}\n        />\n      </Segment>\n    </div>\n  );\n};\n\nexport default Register;\n","import React, { useEffect } from \"react\";\n\nimport { useQuery } from \"react-apollo-hooks\";\nimport { Header, Segment, Loader } from \"semantic-ui-react\";\nimport { CURRENT_USER } from \"../queries/index\";\n\nconst Secret = props => {\n  useEffect(() => {\n    if (!localStorage.getItem(\"token\")) props.history.push(\"/register\");\n  }, []);\n\n  const { data, loading } = useQuery(CURRENT_USER);\n\n  if (loading)\n    return (\n      <Loader\n        active={loading}\n        inline=\"centered\"\n        size=\"large\"\n        style={{ marginTop: 200 }}\n      />\n    );\n  return (\n    <div>\n      <div style={{ maxWidth: 600, margin: \"100px auto\" }}>\n        <Segment>\n          <Header textAlign=\"center\">\n            Wellcome {data.me.name} this is your secret page :)\n          </Header>\n        </Segment>\n      </div>\n    </div>\n  );\n};\n\nexport default Secret;\n","import React from \"react\";\nimport { Menu, Segment, Button } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\n\nconst Navbar = props => {\n  const handleLogoutClick = () => {\n    localStorage.removeItem(\"token\");\n    props.history.push(\"/register\");\n  };\n\n  return (\n    <Segment>\n      <Menu secondary>\n        <Menu.Menu position=\"right\">\n          {!localStorage.getItem(\"token\") ? (\n            <>\n              <Menu.Item as={Link} to=\"/login\">\n                Login\n              </Menu.Item>\n              <Menu.Item as={Link} to=\"/register\">\n                Register\n              </Menu.Item>\n            </>\n          ) : (\n            <>\n              <Button color=\"red\" inverted onClick={handleLogoutClick}>\n                Logout\n              </Button>\n            </>\n          )}\n        </Menu.Menu>\n      </Menu>\n    </Segment>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport { Portal, Segment, Icon } from \"semantic-ui-react\";\n\nconst PortalCMP = ({ content, show, close }) => {\n \n  \n  return (\n    <Portal onClose={close} open={show}>\n      <Segment\n        raised\n        style={{\n          left: \"80%\",\n          position: \"fixed\",\n          top: \"10%\",\n          marginRight: \"20px\",\n          zIndex: 1000\n        }}\n      >\n        <Icon\n          name=\"close\"\n          circular\n          link\n          style={{ float: \"right\" }}\n          onClick={close}\n        />\n        <p style={{ color: \"#576366\" }}>{content}</p>\n      </Segment>\n    </Portal>\n  );\n};\n\nexport default PortalCMP;\n","import React, { useState } from \"react\";\nimport { Form, Button, Segment, Header } from \"semantic-ui-react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useMutation } from \"react-apollo-hooks\";\nimport { FORGOT_PASSWORD } from \"../mutations/index\";\nimport Email from \"../components/EmailField\";\nimport Portal from \"../components/Portal\";\n\nconst ForgotPasswordSchema = Yup.object().shape({\n  email: Yup.string()\n    .email(\"Invalid email\")\n    .required(\"Required\")\n});\n\nconst ForgotPassword = props => {\n  const forgotPassword = useMutation(FORGOT_PASSWORD);\n  const [showPortal, setShowPortal] = useState(false);\n  \n  const onSubmit = async (values, actions) => {\n    try {\n      await forgotPassword({\n        variables: { email: values.email }\n      });\n      actions.setSubmitting(false);\n      setShowPortal(true);\n    } catch (error) {\n      actions.setFieldError(\n        \"email\",\n        \"No account with this email address exists\"\n      );\n      actions.setSubmitting(false);\n    }\n  };\n  return (\n    <Formik\n      initialValues={{ email: \"\" }}\n      validationSchema={ForgotPasswordSchema}\n      onSubmit={onSubmit}\n    >\n      {props => {\n        return (\n          <div className=\"frm\">\n            {showPortal ? (\n              <Portal\n                show={showPortal}\n                close={() => setShowPortal(false)}\n                content=\"Alright! Instructions to reset your password\n               have been emailed to you. Please check your email.\"\n              />\n            ) : null}\n            <Segment stacked>\n              <div style={{ padding: \".6em\" }}>\n                <Header>Reset Password</Header>\n                <p style={{ color: \"#576366\" }}>\n                  Enter your email address and we’ll send you an email with\n                  instructions to reset your password.\n                </p>\n                <Form\n                  onSubmit={props.handleSubmit}\n                  loading={props.isSubmitting}\n                >\n                  <Email />\n                  <Button type=\"submit\" basic>\n                    Submit\n                  </Button>\n                </Form>\n              </div>\n            </Segment>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default ForgotPassword;\n","import React from \"react\";\nimport { Header } from \"semantic-ui-react\";\n\nconst NotFound = () => {\n  return (\n    <div style={{ marginTop: 150 }}>\n      <Header textAlign=\"center\" size=\"huge\">\n        404\n      </Header>\n      <Header\n        textAlign=\"center\"\n        size=\"small\"\n        style={{ marginTop: \"-.5rem\", color: \"#576366\" }}\n      >\n        Page Not Found\n      </Header>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React, { useState } from \"react\";\nimport { Formik } from \"formik\";\nimport { Form, Button, Segment, Divider, Header } from \"semantic-ui-react\";\nimport * as Yup from \"yup\";\nimport { useMutation } from \"react-apollo-hooks\";\nimport { CHANGE_PASSWORD } from \"../mutations\";\n\nimport Password from \"../components/PasswordField\";\nimport Portal from \"../components/Portal\";\n\nconst ResetPasswordSchema = Yup.object().shape({\n  password: Yup.string()\n    .min(8, \"Too Short!\")\n    .max(30, \"Too Long!\")\n    .required(\"Required\"),\n  confirmPassword: Yup.string()\n    .min(8, \"Too Short!\")\n    .max(30, \"Too Long!\")\n    .required(\"Required\")\n});\n\nconst ChangePassword = props => {\n  const changePassword = useMutation(CHANGE_PASSWORD);\n  const [showPortal, setShowPortal] = useState(false);\n\n  const onSubmit = async (values, actions) => {\n    if (values.password !== values.confirmPassword) {\n      actions.setSubmitting(false);\n      return actions.setFieldError(\"confirmPassword\", \"Password did not match\");\n    }\n\n    try {\n      const { data } = await changePassword({\n        variables: {\n          password: values.password,\n          token: props.match.params.token\n        }\n      });\n      localStorage.setItem(\"token\", data.changePassword.token);\n      props.history.push(\"/secret\");\n    } catch (error) {\n      setShowPortal(true);\n      actions.setSubmitting(false);\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={{ password: \"\", confirmPassword: \"\" }}\n      validationSchema={ResetPasswordSchema}\n      onSubmit={onSubmit}\n    >\n      {props => {\n        return (\n          <div className=\"frm\">\n            {showPortal ? (\n              <Portal\n                show={showPortal}\n                close={() => setShowPortal(false)}\n                content=\"Password reset token is invalid or has expired\"\n              />\n            ) : null}\n            <Segment>\n              <Form onSubmit={props.handleSubmit} loading={props.isSubmitting}>\n                <Divider horizontal>\n                  <Header>\n                    <em>Reset Password</em>\n                  </Header>\n                </Divider>\n                <Password />\n                <Password\n                  placeholder=\"Confirm Password\"\n                  name=\"confirmPassword\"\n                />\n                <Button type=\"submit\" basic>\n                  Submit\n                </Button>\n              </Form>\n            </Segment>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default ChangePassword;\n","import React from \"react\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport Login from \"./pages/Login\";\nimport Register from \"./pages/Register\";\nimport Secret from \"./pages/Secret\";\nimport Navbar from \"./components/Navbar\";\nimport ForgotPassword from \"./pages/ForgotPassword\";\nimport NotFound from \"./pages/NotFound\";\nimport ChangePassword from './pages/ChangePassword';\n\nconst App = () => {\n  return (\n    <div>\n      <Route component={Navbar} />\n\n      <Switch>\n        <Redirect exact from=\"/\" to=\"/register\" />\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path=\"/register\" component={Register} />\n        <Route exact path=\"/secret\" component={Secret} />\n        <Route exact path=\"/forgot-password\" component={ForgotPassword} />\n        <Route exact path=\"/reset/:token\" component={ChangePassword} />\n        <Route component={NotFound} />\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport './style.css';\nimport { ApolloProvider } from \"react-apollo-hooks\";\nimport { ApolloClient } from \"apollo-client\";\nimport { createHttpLink } from \"apollo-link-http\";\nimport { setContext } from \"apollo-link-context\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst httpLink = createHttpLink({\n  uri: \"http://localhost:4000/graphql\"\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(\"token\");\n\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\"\n    }\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n\n"],"sourceRoot":""}