{"version":3,"sources":["components/ErrorMessage.js","components/EmailField.js","components/PasswordField.js","components/Form.js","mutations/index.js","pages/Login.js","pages/Register.js","queries/index.js","pages/Secret.js","components/Navbar.js","components/Portal.js","pages/ForgotPassword.js","pages/ResetPassword.js","pages/NotFound.js","App.js","index.js"],"names":["ErrorMessageHandler","_ref","field","react_default","a","createElement","formik_esm","name","msg","Label","basic","color","pointing","size","Email","Fragment","ErrorMessage","Form","Field","type","placeholder","Password","_useState","useState","_useState2","Object","slicedToArray","revealPass","setRevealPass","handleRevealPassword","e","_ref2","Input","assign","icon","Icon","circular","link","onClick","Frm","showUserName","validationSchema","initialValues","onSubmit","_ref$showForgotPasswo","showForgotPasswordLink","props","handleSubmit","loading","isSubmitting","EmailField","PasswordField","react_router_dom","to","style","float","paddingTop","Button","FORGOT_PASSWORD","gql","_templateObject","LOGIN","_templateObject2","REGISTER","_templateObject3","RESET_PASSWORD","_templateObject4","LoginSchema","Yup","shape","email","required","password","min","max","Login","loginUser","useMutation","asyncToGenerator","regenerator_default","mark","_callee","values","actions","data","isEmailError","wrap","_context","prev","next","variables","sent","localStorage","setItem","login","token","history","push","t0","message","split","toLowerCase","includes","setFieldError","setSubmitting","stop","_x","_x2","apply","this","arguments","className","Segment","stacked","Divider","horizontal","Header","components_Form","RegisterSchema","Register","addNewUser","register","CURRENT_USER","queries_templateObject","Secret","useEffect","getItem","_useQuery","useQuery","Loader","active","inline","marginTop","maxWidth","margin","textAlign","me","Navbar","Menu","secondary","position","inverted","removeItem","Item","as","Link","PortalCMP","content","show","close","Portal","onClose","open","raised","left","top","marginRight","zIndex","ForgotPasswordSchema","ForgotPassword","forgotPassword","showPortal","setShowPortal","components_Portal","padding","ResetPasswordSchema","confirmPassword","ResetPassword","resetPassword","abrupt","resetPasswordToken","resetPasswordExpires","match","params","NotFound","App","react_router","component","exact","from","path","httpLink","createHttpLink","uri","authLink","setContext","_","headers","objectSpread","authorization","concat","client","ApolloClient","cache","InMemoryCache","ReactDOM","render","ApolloContext","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.47962383.chunk.js","sourcesContent":["import React from \"react\";\nimport { ErrorMessage } from \"formik\";\nimport { Label } from \"semantic-ui-react\";\n\nconst ErrorMessageHandler = ({ field }) => {\n  return (\n    <ErrorMessage name={field}>\n      {msg => (\n        <Label basic color=\"red\" pointing=\"below\" size=\"small\">\n          {msg}\n        </Label>\n      )}\n    </ErrorMessage>\n  );\n};\n\nexport default ErrorMessageHandler;\n","import React from \"react\";\nimport { Form } from \"semantic-ui-react\";\nimport { Field } from \"formik\";\nimport ErrorMessageHandler from \"./ErrorMessage\";\n\nconst Email = () => {\n  return (\n    <>\n      <ErrorMessageHandler field=\"email\"/>\n      <Form.Field >\n        <Field type=\"email\" name=\"email\" placeholder=\"Email\" />\n      </Form.Field>\n    </>\n  );\n};\n\nexport default Email;\n","import React, { useState } from \"react\";\nimport { Form, Input, Icon } from \"semantic-ui-react\";\nimport { Field } from \"formik\";\nimport ErrorMessageHandler from \"./ErrorMessage\";\n\nconst Password = ({ placeholder, name }) => {\n  const [revealPass, setRevealPass] = useState(false);\n\n  const handleRevealPassword = e => setRevealPass(!revealPass);\n  return (\n    <>\n      <ErrorMessageHandler field={name ? name : \"password\"} />\n      <Form.Field>\n        <Field type=\"password\" name={name ? name : \"password\"}>\n          {({ field }) => {\n            return (\n              <Input\n                {...field}\n                type={revealPass ? \"text\" : \"password\"}\n                icon={\n                  <Icon\n                    name={revealPass ? \"eye\" : \"eye slash\"}\n                    circular\n                    link\n                    onClick={handleRevealPassword}\n                  />\n                }\n                placeholder={placeholder ? placeholder : \"Password\"}\n              />\n            );\n          }}\n        </Field>\n      </Form.Field>\n    </>\n  );\n};\n\nexport default Password;\n","import React from \"react\";\nimport { Form, Button } from \"semantic-ui-react\";\nimport { Formik, Field } from \"formik\";\nimport { Link } from \"react-router-dom\";\nimport Email from \"./EmailField\";\nimport Password from \"./PasswordField\";\nimport ErrorMessageHandler from \"./ErrorMessage\";\n\nconst Frm = ({\n  showUserName,\n  validationSchema,\n  initialValues,\n  onSubmit,\n  showForgotPasswordLink = false\n}) => {\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={onSubmit}\n    >\n      {props => {\n        return (\n          <Form onSubmit={props.handleSubmit} loading={props.isSubmitting}>\n            {showUserName ? (\n              <>\n                <ErrorMessageHandler field=\"name\" />\n                <Form.Field>\n                  <Field type=\"text\" name=\"name\" placeholder=\"Username\" />\n                </Form.Field>\n              </>\n            ) : null}\n            <Email />\n            <Password />\n            {showForgotPasswordLink ? (\n              <Link\n                to=\"/forgot-password\"\n                style={{ float: \"right\", paddingTop: 9 }}\n              >\n                Forgot Password?\n              </Link>\n            ) : null}\n            <Button type=\"submit\" basic>\n              Submit\n            </Button>\n          </Form>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default Frm;\n","import gql from \"graphql-tag\";\n\nexport const FORGOT_PASSWORD = gql`\n  mutation($email: String!) {\n    forgotPassword(email: $email)\n  }\n`;\n\nexport const LOGIN = gql`\n  mutation($data: LoginInputType!) {\n    login(data: $data) {\n      user {\n        name\n      }\n      token\n    }\n  }\n`;\n\nexport const REGISTER = gql`\n  mutation($data: RegisterInputType!) {\n    register(data: $data) {\n      user {\n        name\n      }\n      token\n    }\n  }\n`;\n\nexport const RESET_PASSWORD = gql`\n  mutation($data: UpdateUserInputType!, $token: String) {\n    updatePassword(data: $data, token: $token) {\n      id\n      name\n      email\n      resetPasswordToken\n      resetPasswordExpires\n    }\n  }\n`;\n","import React from \"react\";\nimport Form from \"../components/Form\";\nimport { useMutation } from \"react-apollo-hooks\";\nimport * as Yup from \"yup\";\nimport { Segment, Divider, Header } from \"semantic-ui-react\";\nimport {LOGIN} from '../mutations/index'\n\nconst LoginSchema = Yup.object().shape({\n  email: Yup.string()\n    .email(\"Invalid email\")\n    .required(\"Required\"),\n  password: Yup.string()\n    .min(8, \"Too Short!\")\n    .max(30, \"Too Long!\")\n    .required(\"Required\")\n});\n\nconst Login = props => {\n  const loginUser = useMutation(LOGIN);\n\n  const onSubmit = async (values, actions) => {\n    try {\n      const { data } = await loginUser({ variables: { data: values } });\n      localStorage.setItem(\"token\", data.login.token);\n      props.history.push(\"/secret\");\n    } catch (error) {\n      const msg = error.message.split(\":\")[1];\n      const isEmailError = msg.toLowerCase().includes(\"email\");\n      actions.setFieldError(isEmailError ? \"email\" : \"password\", msg);\n      actions.setSubmitting(false);\n    }\n  };\n  \n  return (\n    <div className=\"frm\">\n      <Segment stacked>\n        <Divider horizontal>\n          <Header><em>Login</em></Header>\n        </Divider>\n        <Form\n          showUserName={false}\n          initialValues={{ email: \"\", password: \"\" }}\n          validationSchema={LoginSchema}\n          onSubmit={onSubmit}\n          showForgotPasswordLink={true}\n        />\n      </Segment>\n    </div>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport Form from \"../components/Form\";\nimport { useMutation } from \"react-apollo-hooks\";\nimport * as Yup from \"yup\";\nimport { Segment, Divider, Header } from \"semantic-ui-react\";\nimport { REGISTER } from \"../mutations/index\";\n\nconst RegisterSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(20, \"Too Long!\")\n    .required(\"Required\"),\n  email: Yup.string()\n    .email(\"Invalid email\")\n    .required(\"Required\"),\n  password: Yup.string()\n    .min(8, \"Too Short!\")\n    .max(30, \"Too Long!\")\n    .required(\"Required\")\n});\n\nconst Register = props => {\n  const addNewUser = useMutation(REGISTER);\n\n  const onSubmit = async (values, actions) => {\n    try {\n      const { data } = await addNewUser({ variables: { data: values } });\n      localStorage.setItem(\"token\", data.register.token);\n      props.history.push(\"/secret\");\n    } catch (error) {\n      actions.setFieldError(\"email\", \"Email is in use please try another one\");\n      actions.setSubmitting(false);\n    }\n  };\n\n  return (\n    <div className=\"frm\">\n      <Segment stacked>\n        <Divider horizontal>\n          <Header><em>Register</em></Header>\n        </Divider>\n        <Form\n          showUserName={true}\n          initialValues={{ name: \"\", email: \"\", password: \"\" }}\n          validationSchema={RegisterSchema}\n          onSubmit={onSubmit}\n        />\n      </Segment>\n    </div>\n  );\n};\n\nexport default Register;\n","import gql from \"graphql-tag\";\n\nexport const CURRENT_USER = gql`\n  {\n    me {\n      name\n    }\n  }\n`;\n","import React, { useEffect } from \"react\";\n\nimport { useQuery } from \"react-apollo-hooks\";\nimport { Header, Segment, Loader } from \"semantic-ui-react\";\nimport { CURRENT_USER } from \"../queries/index\";\n\nconst Secret = props => {\n  useEffect(() => {\n    if (!localStorage.getItem(\"token\")) props.history.push(\"/register\");\n  }, []);\n\n  const { data, loading } = useQuery(CURRENT_USER);\n\n  if (loading)\n    return (\n      <Loader\n        active={loading}\n        inline=\"centered\"\n        size=\"large\"\n        style={{ marginTop: 200 }}\n      />\n    );\n  return (\n    <div>\n      <div style={{ maxWidth: 600, margin: \"100px auto\" }}>\n        <Segment>\n          <Header textAlign=\"center\">\n            Wellcome {data.me.name} this is your secret page :)\n          </Header>\n        </Segment>\n      </div>\n    </div>\n  );\n};\n\nexport default Secret;\n","import React from \"react\";\nimport { Menu, Segment, Button } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\n\nconst Navbar = props => {\n  const handleLogoutClick = () => {\n    localStorage.removeItem(\"token\");\n    props.history.push(\"/register\");\n  };\n\n  return (\n    <Segment>\n      <Menu secondary>\n        <Menu.Menu position=\"right\">\n          {!localStorage.getItem(\"token\") ? (\n            <>\n              <Menu.Item as={Link} to=\"/login\">\n                Login\n              </Menu.Item>\n              <Menu.Item as={Link} to=\"/register\">\n                Register\n              </Menu.Item>\n            </>\n          ) : (\n            <>\n              <Button color=\"red\" inverted onClick={handleLogoutClick}>\n                Logout\n              </Button>\n            </>\n          )}\n        </Menu.Menu>\n      </Menu>\n    </Segment>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport { Portal, Segment, Icon } from \"semantic-ui-react\";\n\nconst PortalCMP = ({ content, show, close }) => {\n \n  \n  return (\n    <Portal onClose={close} open={show}>\n      <Segment\n        raised\n        style={{\n          left: \"80%\",\n          position: \"fixed\",\n          top: \"10%\",\n          marginRight: \"20px\",\n          zIndex: 1000\n        }}\n      >\n        <Icon\n          name=\"close\"\n          circular\n          link\n          style={{ float: \"right\" }}\n          onClick={close}\n        />\n        <p style={{ color: \"#576366\" }}>{content}</p>\n      </Segment>\n    </Portal>\n  );\n};\n\nexport default PortalCMP;\n","import React, { useState } from \"react\";\nimport { Form, Button, Segment, Header } from \"semantic-ui-react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useMutation } from \"react-apollo-hooks\";\nimport { FORGOT_PASSWORD } from \"../mutations/index\";\nimport Email from \"../components/EmailField\";\nimport Portal from \"../components/Portal\";\n\nconst ForgotPasswordSchema = Yup.object().shape({\n  email: Yup.string()\n    .email(\"Invalid email\")\n    .required(\"Required\")\n});\n\nconst ForgotPassword = props => {\n  const forgotPassword = useMutation(FORGOT_PASSWORD);\n  const [showPortal, setShowPortal] = useState(false);\n  \n  const onSubmit = async (values, actions) => {\n    try {\n      await forgotPassword({\n        variables: { email: values.email }\n      });\n      actions.setSubmitting(false);\n      setShowPortal(true);\n    } catch (error) {\n      actions.setFieldError(\n        \"email\",\n        \"No account with this email address exists\"\n      );\n      actions.setSubmitting(false);\n    }\n  };\n  return (\n    <Formik\n      initialValues={{ email: \"\" }}\n      validationSchema={ForgotPasswordSchema}\n      onSubmit={onSubmit}\n    >\n      {props => {\n        return (\n          <div className=\"frm\">\n            {showPortal ? (\n              <Portal\n                show={showPortal}\n                close={() => setShowPortal(false)}\n                content=\"Alright! Instructions to reset your password\n               have been emailed to you. Please check your email.\"\n              />\n            ) : null}\n            <Segment stacked>\n              <div style={{ padding: \".6em\" }}>\n                <Header>Reset Password</Header>\n                <p style={{ color: \"#576366\" }}>\n                  Enter your email address and we’ll send you an email with\n                  instructions to reset your password.\n                </p>\n                <Form\n                  onSubmit={props.handleSubmit}\n                  loading={props.isSubmitting}\n                >\n                  <Email />\n                  <Button type=\"submit\" basic>\n                    Submit\n                  </Button>\n                </Form>\n              </div>\n            </Segment>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default ForgotPassword;\n","import React, { useState } from \"react\";\nimport { Formik } from \"formik\";\nimport { Form, Button, Segment, Divider, Header } from \"semantic-ui-react\";\nimport * as Yup from \"yup\";\nimport { useMutation } from \"react-apollo-hooks\";\nimport { RESET_PASSWORD } from \"../mutations\";\n\nimport Password from \"../components/PasswordField\";\nimport Portal from \"../components/Portal\";\n\nconst ResetPasswordSchema = Yup.object().shape({\n  password: Yup.string()\n    .min(8, \"Too Short!\")\n    .max(30, \"Too Long!\")\n    .required(\"Required\"),\n  confirmPassword: Yup.string()\n    .min(8, \"Too Short!\")\n    .max(30, \"Too Long!\")\n    .required(\"Required\")\n});\n\nconst ResetPassword = props => {\n  const resetPassword = useMutation(RESET_PASSWORD);\n  const [showPortal, setShowPortal] = useState(false);\n\n  const onSubmit = async (values, actions) => {\n    if (values.password !== values.confirmPassword) {\n      actions.setSubmitting(false);\n      return actions.setFieldError(\"confirmPassword\", \"Password did not match\");\n    }\n    const data = {\n      password: values.password,\n      resetPasswordToken: \"\",\n      resetPasswordExpires: 0\n    };\n    try {\n      await resetPassword({\n        variables: { data, token: props.match.params.token }\n      });\n      props.history.push(\"/login\");\n    } catch (error) {\n      setShowPortal(true);\n      actions.setSubmitting(false);\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={{ password: \"\", confirmPassword: \"\" }}\n      validationSchema={ResetPasswordSchema}\n      onSubmit={onSubmit}\n    >\n      {props => {\n        return (\n          <div className=\"frm\">\n            {showPortal ? (\n              <Portal\n                show={showPortal}\n                close={() => setShowPortal(false)}\n                content=\"Password reset token is invalid or has expired\"\n              />\n            ) : null}\n            <Segment>\n              <Form onSubmit={props.handleSubmit} loading={props.isSubmitting}>\n                <Divider horizontal>\n                  <Header>\n                    <em>Reset Password</em>\n                  </Header>\n                </Divider>\n                <Password />\n                <Password\n                  placeholder=\"Confirm Password\"\n                  name=\"confirmPassword\"\n                />\n                <Button type=\"submit\" basic>\n                  Submit\n                </Button>\n              </Form>\n            </Segment>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default ResetPassword;\n","import React from \"react\";\nimport { Header } from \"semantic-ui-react\";\n\nconst NotFound = () => {\n  return (\n    <div style={{ marginTop: 150 }}>\n      <Header textAlign=\"center\" size=\"huge\">\n        404\n      </Header>\n      <Header\n        textAlign=\"center\"\n        size=\"small\"\n        style={{ marginTop: \"-.5rem\", color: \"#576366\" }}\n      >\n        Page Not Found\n      </Header>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React from \"react\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport Login from \"./pages/Login\";\nimport Register from \"./pages/Register\";\nimport Secret from \"./pages/Secret\";\nimport Navbar from \"./components/Navbar\";\nimport ForgotPassword from \"./pages/ForgotPassword\";\nimport ResetPassword from \"./pages/ResetPassword\";\nimport NotFound from \"./pages/NotFound\";\n\nconst App = () => {\n  return (\n    <div>\n      <Route component={Navbar} />\n\n      <Switch>\n        <Redirect exact from=\"/\" to=\"/register\" />\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path=\"/register\" component={Register} />\n        <Route exact path=\"/secret\" component={Secret} />\n        <Route exact path=\"/forgot-password\" component={ForgotPassword} />\n        <Route exact path=\"/reset/:token\" component={ResetPassword} />\n        <Route component={NotFound} />\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport './style.css';\nimport { ApolloProvider } from \"react-apollo-hooks\";\nimport { ApolloClient } from \"apollo-client\";\nimport { createHttpLink } from \"apollo-link-http\";\nimport { setContext } from \"apollo-link-context\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst httpLink = createHttpLink({\n  uri: \"http://localhost:4000/graphql\"\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(\"token\");\n\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\"\n    }\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n\n"],"sourceRoot":""}